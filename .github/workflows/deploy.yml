name: BuildNDeploy

on: [push]

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: 100days/myapp

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      - name: Log into registry ${{ env.REGISTRY }}
#        if: github.event_name != 'pull_request'
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Extract Docker metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          tags: |
            type=ref,event=branch
            type=sha
      - name: Build and push App Image
        uses: docker/build-push-action@v6
        with:
          file: ./docker/app/Dockerfile
          context: .
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=registry,ref=${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:buildcache
          cache-to: type=registry,ref=${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:buildcache,mode=max

  deploy:
    needs: build
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: read
#    if: ${{ github.ref_name == 'develop' }}

    steps:
      - name: checkout
        uses: actions/checkout@v4
      - name: Transfer files
        uses: appleboy/scp-action@master
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USER }}
          key: ${{ secrets.SSH_KEY }}
          port: 22
          source: "docker-compose.yaml,.env"
          target: "~/myapp"
      - name: Deploy to docker compose
        uses: appleboy/ssh-action@v1.2.0
        env:
          SYMFONY_SECRET: ${{ secrets.SYMFONY_SECRET }}
          DOCKER_USER: ${{ github.actor }}
          DOCKER_PASSWORD: ${{ secrets.GITHUB_TOKEN }}
          DOCKER_REGISTRY: ${{ env.REGISTRY }}
        with:
          envs: SYMFONY_SECRET, DOCKER_USER, DOCKER_PASSWORD, DOCKER_REGISTRY
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USER }}
          key: ${{ secrets.SSH_KEY }}
          port: 22
          script: |
            cd ~/myapp
            envsubst < .env > .env
            docker login $DOCKER_REGISTRY -u $DOCKER_USER -p $DOCKER_PASSWORD
            docker compose -f docker-compose.yaml pull
            docker compose -f docker-compose.yaml up app  -d
            sleep 10
            docker compose -f docker-compose.yaml exec -u www-data app php bin/console doctrine:migrations:migrate -n